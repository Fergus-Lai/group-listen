import { type NextPage } from "next";
import Head from "next/head";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faArrowLeft, faSearch } from "@fortawesome/free-solid-svg-icons";
import Link from "next/link";
import { AnimatePresence, motion } from "framer-motion";
import Switch from "react-switch";
import { useState } from "react";
import { api } from "~/utils/api";
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import VideoCard from "~/components/videoRender/videoCard";
import { type MusicVideo } from "node-youtube-music";

const Create: NextPage = () => {
  const [anonymousMode, setAnonymousMode] = useState(false);
  const [chat, setChat] = useState(false);
  const [searchType, setSearchType] = useState("Music");
  const [searchTarget, setSearchTarget] = useState("");
  const [result, setResult] = useState<MusicVideo[]>([]);
  const search = api.youtube.search.useQuery(
    {
      target: searchTarget,
      type: searchType,
    },
    { enabled: false }
  );

  return (
    <>
      <Head>
        <title>Create Room â€¢ Group Listen</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center gap-2 bg-slate-800 py-8 text-white">
        <ToastContainer theme="dark" />
        <div className="flex w-2/3 flex-row items-center gap-2 text-left text-xl font-bold">
          <motion.div whileHover={{ scale: 1.1 }} whileTap={{ scale: 0.9 }}>
            <Link href="/">
              <FontAwesomeIcon icon={faArrowLeft} className="w-4  " />
            </Link>
          </motion.div>
          Create a Room
        </div>
        <div className="flex w-2/3 flex-row justify-between">
          Anonymous mode
          <Switch
            onChange={() => void setAnonymousMode(!anonymousMode)}
            checked={anonymousMode}
          />
        </div>
        <div className="flex w-2/3 flex-row justify-between">
          Chat
          <Switch onChange={() => void setChat(!chat)} checked={chat} />
        </div>
        <div>Search</div>
        <form
          className="flex w-2/3 flex-row"
          onSubmit={(e: React.FormEvent) => {
            e.preventDefault();
            toast("Search In Progress");
            setResult([]);
            void search
              .refetch()
              .then(({ data }) => {
                data && data.length > 0
                  ? setResult(data)
                  : toast.error("No result");
              })
              .catch((e) => void toast.error(JSON.stringify(e)));
          }}
        >
          <select
            name="searchType"
            className="w-1/6 min-w-fit rounded-l-lg text-center text-black"
            value={searchType}
            onChange={(e) => {
              setSearchType(e.target.value);
              setResult([]);
            }}
          >
            <option>Search</option>
            <option>Url</option>
          </select>
          <input
            name="target"
            className="w-full rounded-none px-2 text-black focus:outline-none"
            value={searchTarget}
            onChange={(e) => {
              setSearchTarget(e.target.value);
              setResult([]);
            }}
          />
          <button className="flex w-1/12 min-w-fit items-center justify-center rounded-r-lg bg-white text-slate-500">
            <FontAwesomeIcon icon={faSearch} className="w-4" />
          </button>
        </form>
        {result && (
          <div className="flex w-2/3 flex-col gap-2">
            <AnimatePresence initial={false} mode="wait">
              {result.map((video, index) => (
                <VideoCard video={video} key={index} />
              ))}
            </AnimatePresence>
          </div>
        )}
      </main>
    </>
  );
};

export default Create;
