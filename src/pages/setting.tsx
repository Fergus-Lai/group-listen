import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import {
  faRightToBracket,
  faArrowLeft,
} from "@fortawesome/free-solid-svg-icons";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import { toast } from "react-toastify";
import LogOutModal from "~/components/logOutModal";
import { AnimatePresence, motion } from "framer-motion";
import Switch from "react-switch";
import { api } from "~/utils/api";
import BackToHomeButton from "~/components/backToHomeButton";
import { useUser } from "@clerk/nextjs";

// TODO: Implement Delete Account
const deleteAccount: () => void = () => {
  toast.error("Delete Account Not Yet Implemented");
};

const Setting: NextPage = () => {
  const { user, isLoaded, isSignedIn } = useUser();
  const router = useRouter();
  const [logOutModalOpen, setLogOutModalOpen] = useState(false);
  const [displayTag, setDisplayTag] = useState<boolean>(false);
  const { mutate: updateTag } = api.user.updateTag.useMutation();
  const { data: userData, isLoading: userDataLoading } =
    api.user.getUser.useQuery();
  useEffect(() => {
    if (isLoaded && !isSignedIn) {
      void router.push("/");
      return;
    }
  }, [isLoaded]);

  useEffect(() => {
    if (userDataLoading || !userData) return;
    setDisplayTag(userData.displayTag);
  }, [userDataLoading]);

  return (
    <>
      <Head>
        <title>Setting â€¢ Group Listen</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center gap-2 bg-slate-800 py-8 text-white">
        <div className="flex w-2/3 flex-row items-center gap-2 text-left text-xl font-bold">
          <BackToHomeButton />
          Setting
        </div>
        <AnimatePresence initial={false} mode="sync">
          {logOutModalOpen && (
            <LogOutModal
              closeHandler={() => void setLogOutModalOpen(false)}
            ></LogOutModal>
          )}
        </AnimatePresence>
        {isLoaded && (
          <>
            <div className="w-2/3 text-lg font-semibold">Social Setting</div>
            <div className="flex w-2/3 flex-row justify-between">
              Display Discord Tag
              <Switch
                onChange={() => {
                  updateTag({ displayTag });
                  setDisplayTag(!displayTag);
                }}
                checked={displayTag}
              />
            </div>
            <div className="w-2/3 text-lg font-semibold">Account Setting</div>
            <div className="flex w-2/3 gap-2">
              <button
                className="flex w-32 flex-row items-center justify-between rounded-lg border-2 border-red-500 p-2 hover:bg-red-500"
                onClick={() => void setLogOutModalOpen(true)}
              >
                Log Out
                <FontAwesomeIcon icon={faRightToBracket} className="w-4" />
              </button>
              <button
                onClick={() => void deleteAccount()}
                className="flex w-32 flex-row items-center justify-between rounded-lg bg-red-500 p-2 hover:opacity-50"
              >
                Delete Account
              </button>
            </div>
          </>
        )}
      </main>
    </>
  );
};

export default Setting;
